#!/usr/bin/env zsh

# copyright 2014 Renato Alves
# distributed under the GPL licence
TASKDIR=$HOME/.task 
if [ -z "$TASKDIR" ]; then
  #TODO Look for data location in rc:location instead of assuming ~/.taskrc
  TASKDIR="$(grep data.location $HOME/.taskrc | sed -e 's/^.*=\(.*\)$/\1/')"
fi

if [ -z "$TASKBIN" ]; then
  TASKBIN="task"
fi

EXITCODE=1

parse_git_dirty() {
  local STATUS=''
  local FLAGS
  FLAGS=('--porcelain')
  if [[ "$(command git config --get oh-my-zsh.hide-dirty)" != "1" ]]; then
    if [[ $POST_1_7_2_GIT -gt 0 ]]; then
      FLAGS+='--ignore-submodules=dirty'
    fi
    FLAGS+='--untracked-files=no'
    STATUS=$(command git status ${FLAGS} 2> /dev/null | tail -n1)
  fi
  if [[ -n $STATUS ]]; then
    echo "1"
  fi
}

move_to_dir(){
  if [ -d "$TASKDIR" ]; then
    cd "$(echo $TASKDIR)"
  else
    echo "Couldn't navigate to TASKDIR: $TASKDIR"
    exit $EXITCODE
  fi
}

if [ ! "$1" == "git" ] ; then 
  $TASKBIN "$@"
  EXITCODE="$?"

  move_to_dir

  # put back for git sync
  # if [ "$#" -gt "0" ]; then
  #   git commit -a -m "$*" 2>&1 | tee -a git.log
  # fi
  #
  # if [[ -n "$(parse_git_dirty)" ]] ; then
  #   echo There are local un-pushed changes.  Task git sync required. 
  # fi

  exit $EXITCODE
fi

move_to_dir

if ! [ -d "$TASKDIR/.git" ]; then
  git init 2>&1 > git.log
  echo "git.log" > .gitignore
  echo "git.log.old" >> .gitignore
  echo "*.pem" >> .gitignore
  git add .gitignore 2>&1 >> git.log
  git add *.data *.theme 2>&1 >> git.log
  git commit -a -m "Initial log" 2>&1 >> git.log
fi

if [ "$#" -gt "0" ]; then
  if [ "$2" == "-f" ] ; then
    git commit -a -m "$*" 2>&1 | tee -a git.log
  fi
  git pull 2>&1 | tee -a git.log
  git push 2>&1 | tee -a git.log
fi

if [ ! -f git.log ] ; then
  touch git.log
fi

# Rotate git.log if bigger than 1M
if [ "$(stat -c '%s' git.log)" -gt "1000000" ]; then
  mv -f git.log git.log.old
  touch git.log
fi

